/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proj1;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JPanel;

/**
 *
 * @author Himkw_000
 */
public class JFrame_Mastermind extends javax.swing.JFrame {
  //result panel create disbale buttons -> can add text
  //record panel create panels -> only fill backgroud color
  /**
   * Creates new form Mastermind
   */
  
  //Declare variabels
  JButton[][] record_buttons;
  JButton[][] result_buttons;
  JButton[] check_buttons;
  JButton[] pin_buttons;
  JButton[] level_buttons;
  Color[] pinColor;
  int row=0;  //row 0-9
  ButtonListenerPin pinclk = new ButtonListenerPin();
  ButtonListenerCheck chkclk = new ButtonListenerCheck();
  ButtonListenerLevel levelclk = new ButtonListenerLevel();
  Background bg = new Background();
  int level;    //level=0 -> easy || level=1 ->hard
  TextInputs JFrame_login = new TextInputs();
  public JFrame_Mastermind() {
    initComponents();
    JFrame_login.setVisible(false);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    Rules_pane = new javax.swing.JLayeredPane();
    Back_Rule_button = new javax.swing.JButton();
    Game_pane = new javax.swing.JLayeredPane();
    win_lose_panel = new javax.swing.JPanel();
    win_lose_label = new javax.swing.JLabel();
    counter_result_label = new javax.swing.JLabel();
    answer_label = new javax.swing.JLabel();
    InputPanel = new javax.swing.JPanel();
    CheckPanel = new javax.swing.JPanel();
    ConfirmButton = new javax.swing.JButton();
    Result_Label = new javax.swing.JLabel();
    Input_Label = new javax.swing.JLabel();
    counter_label = new javax.swing.JLabel();
    ResultPanel = new javax.swing.JPanel();
    RecordPanel = new javax.swing.JPanel();
    Menu_pane = new javax.swing.JLayeredPane();
    Level_pane = new javax.swing.JPanel();
    Start_button = new javax.swing.JButton();
    Rule_button = new javax.swing.JButton();
    Title_label = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setPreferredSize(new java.awt.Dimension(400, 650));

    Back_Rule_button.setText("Back");
    Back_Rule_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        Back_Rule_buttonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout Rules_paneLayout = new javax.swing.GroupLayout(Rules_pane);
    Rules_pane.setLayout(Rules_paneLayout);
    Rules_paneLayout.setHorizontalGroup(
      Rules_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Rules_paneLayout.createSequentialGroup()
        .addGap(0, 345, Short.MAX_VALUE)
        .addComponent(Back_Rule_button))
    );
    Rules_paneLayout.setVerticalGroup(
      Rules_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(Rules_paneLayout.createSequentialGroup()
        .addComponent(Back_Rule_button)
        .addGap(0, 577, Short.MAX_VALUE))
    );
    Rules_pane.setLayer(Back_Rule_button, javax.swing.JLayeredPane.DEFAULT_LAYER);

    Game_pane.setPreferredSize(new java.awt.Dimension(400, 600));

    win_lose_panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

    win_lose_label.setText("win/lose");
    win_lose_label.setMaximumSize(new java.awt.Dimension(200, 50));
    win_lose_label.setMinimumSize(new java.awt.Dimension(200, 50));
    win_lose_label.setPreferredSize(new java.awt.Dimension(200, 50));

    counter_result_label.setText(" total try");
    counter_result_label.setMaximumSize(new java.awt.Dimension(200, 50));
    counter_result_label.setMinimumSize(new java.awt.Dimension(200, 50));
    counter_result_label.setPreferredSize(new java.awt.Dimension(200, 50));

    answer_label.setText(" correct answer");
    answer_label.setMaximumSize(new java.awt.Dimension(200, 50));
    answer_label.setMinimumSize(new java.awt.Dimension(200, 50));
    answer_label.setPreferredSize(new java.awt.Dimension(200, 50));

    javax.swing.GroupLayout win_lose_panelLayout = new javax.swing.GroupLayout(win_lose_panel);
    win_lose_panel.setLayout(win_lose_panelLayout);
    win_lose_panelLayout.setHorizontalGroup(
      win_lose_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(win_lose_panelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(win_lose_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(answer_label, javax.swing.GroupLayout.PREFERRED_SIZE, 190, Short.MAX_VALUE)
          .addComponent(counter_result_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
          .addComponent(win_lose_label, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        .addGap(0, 0, Short.MAX_VALUE))
    );
    win_lose_panelLayout.setVerticalGroup(
      win_lose_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(win_lose_panelLayout.createSequentialGroup()
        .addComponent(win_lose_label, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(0, 0, 0)
        .addComponent(counter_result_label, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(0, 0, 0)
        .addComponent(answer_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    win_lose_label.setBackground(Color.white);

    InputPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    InputPanel.setPreferredSize(new java.awt.Dimension(320, 40));

    javax.swing.GroupLayout InputPanelLayout = new javax.swing.GroupLayout(InputPanel);
    InputPanel.setLayout(InputPanelLayout);
    InputPanelLayout.setHorizontalGroup(
      InputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 318, Short.MAX_VALUE)
    );
    InputPanelLayout.setVerticalGroup(
      InputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 38, Short.MAX_VALUE)
    );

    CheckPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    CheckPanel.setPreferredSize(new java.awt.Dimension(160, 40));

    javax.swing.GroupLayout CheckPanelLayout = new javax.swing.GroupLayout(CheckPanel);
    CheckPanel.setLayout(CheckPanelLayout);
    CheckPanelLayout.setHorizontalGroup(
      CheckPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 158, Short.MAX_VALUE)
    );
    CheckPanelLayout.setVerticalGroup(
      CheckPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 0, Short.MAX_VALUE)
    );

    ConfirmButton.setText("Enter");
    ConfirmButton.setPreferredSize(new java.awt.Dimension(160, 40));
    ConfirmButton.setEnabled(false);
    ConfirmButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        ConfirmButtonActionPerformed(evt);
      }
    });

    Result_Label.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
    Result_Label.setText("Result");

    Input_Label.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
    Input_Label.setText("Input");

    counter_label.setText("counter_label");

    ResultPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    ResultPanel.setPreferredSize(new java.awt.Dimension(160, 400));

    javax.swing.GroupLayout ResultPanelLayout = new javax.swing.GroupLayout(ResultPanel);
    ResultPanel.setLayout(ResultPanelLayout);
    ResultPanelLayout.setHorizontalGroup(
      ResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 0, Short.MAX_VALUE)
    );
    ResultPanelLayout.setVerticalGroup(
      ResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 398, Short.MAX_VALUE)
    );

    RecordPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    RecordPanel.setPreferredSize(new java.awt.Dimension(160, 400));

    javax.swing.GroupLayout RecordPanelLayout = new javax.swing.GroupLayout(RecordPanel);
    RecordPanel.setLayout(RecordPanelLayout);
    RecordPanelLayout.setHorizontalGroup(
      RecordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 158, Short.MAX_VALUE)
    );
    RecordPanelLayout.setVerticalGroup(
      RecordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 398, Short.MAX_VALUE)
    );

    javax.swing.GroupLayout Game_paneLayout = new javax.swing.GroupLayout(Game_pane);
    Game_pane.setLayout(Game_paneLayout);
    Game_paneLayout.setHorizontalGroup(
      Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(Game_paneLayout.createSequentialGroup()
        .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(Game_paneLayout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(InputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addGroup(Game_paneLayout.createSequentialGroup()
                .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(CheckPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(RecordPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(Input_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(ResultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(ConfirmButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(Result_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))))
          .addGroup(Game_paneLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(counter_label)))
        .addContainerGap())
      .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(Game_paneLayout.createSequentialGroup()
          .addGap(97, 97, 97)
          .addComponent(win_lose_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addContainerGap(101, Short.MAX_VALUE)))
    );
    Game_paneLayout.setVerticalGroup(
      Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Game_paneLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(counter_label)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(InputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(CheckPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(ConfirmButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGap(18, 18, 18)
        .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(Result_Label)
          .addComponent(Input_Label))
        .addGap(16, 16, 16)
        .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(ResultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(RecordPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(30, 30, 30))
      .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(Game_paneLayout.createSequentialGroup()
          .addGap(135, 135, 135)
          .addComponent(win_lose_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addContainerGap(321, Short.MAX_VALUE)))
    );
    Game_pane.setLayer(win_lose_panel, javax.swing.JLayeredPane.DEFAULT_LAYER);

    win_lose_panel.setBackground(Color.white);
    win_lose_panel.setVisible(false);
    Game_pane.setLayer(InputPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
    panelColor();
    Game_pane.setLayer(CheckPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
    panelCheck();
    Game_pane.setLayer(ConfirmButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
    Game_pane.setLayer(Result_Label, javax.swing.JLayeredPane.DEFAULT_LAYER);
    Game_pane.setLayer(Input_Label, javax.swing.JLayeredPane.DEFAULT_LAYER);
    Game_pane.setLayer(counter_label, javax.swing.JLayeredPane.DEFAULT_LAYER);
    Game_pane.setLayer(ResultPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
    panelResult();
    Game_pane.setLayer(RecordPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
    panelRecord();

    Menu_pane.setPreferredSize(new java.awt.Dimension(400, 600));

    Level_pane.setPreferredSize(new java.awt.Dimension(200, 100));
    Level_pane.setVisible(false);

    javax.swing.GroupLayout Level_paneLayout = new javax.swing.GroupLayout(Level_pane);
    Level_pane.setLayout(Level_paneLayout);
    Level_paneLayout.setHorizontalGroup(
      Level_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 200, Short.MAX_VALUE)
    );
    Level_paneLayout.setVerticalGroup(
      Level_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 100, Short.MAX_VALUE)
    );

    Start_button.setText("Start");
    Start_button.setPreferredSize(new java.awt.Dimension(80, 23));
    Start_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        Start_buttonActionPerformed(evt);
      }
    });

    Rule_button.setText("Rule");
    Rule_button.setPreferredSize(new java.awt.Dimension(80, 23));
    Rule_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        Rule_buttonActionPerformed(evt);
      }
    });

    Title_label.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
    Title_label.setText("Mastermind");

    javax.swing.GroupLayout Menu_paneLayout = new javax.swing.GroupLayout(Menu_pane);
    Menu_pane.setLayout(Menu_paneLayout);
    Menu_paneLayout.setHorizontalGroup(
      Menu_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Menu_paneLayout.createSequentialGroup()
        .addGap(92, 92, 92)
        .addComponent(Title_label)
        .addGap(92, 92, 92))
      .addGroup(Menu_paneLayout.createSequentialGroup()
        .addGap(147, 147, 147)
        .addGroup(Menu_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(Rule_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(Start_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
      .addGroup(Menu_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(Menu_paneLayout.createSequentialGroup()
          .addGap(100, 100, 100)
          .addComponent(Level_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addContainerGap(100, Short.MAX_VALUE)))
    );
    Menu_paneLayout.setVerticalGroup(
      Menu_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Menu_paneLayout.createSequentialGroup()
        .addContainerGap(152, Short.MAX_VALUE)
        .addComponent(Title_label)
        .addGap(131, 131, 131)
        .addComponent(Start_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(63, 63, 63)
        .addComponent(Rule_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(164, 164, 164))
      .addGroup(Menu_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(Menu_paneLayout.createSequentialGroup()
          .addGap(250, 250, 250)
          .addComponent(Level_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addContainerGap(250, Short.MAX_VALUE)))
    );
    Menu_pane.setLayer(Level_pane, javax.swing.JLayeredPane.DEFAULT_LAYER);

    level_gen();
    Menu_pane.setLayer(Start_button, javax.swing.JLayeredPane.DEFAULT_LAYER);
    Menu_pane.setLayer(Rule_button, javax.swing.JLayeredPane.DEFAULT_LAYER);
    Menu_pane.setLayer(Title_label, javax.swing.JLayeredPane.DEFAULT_LAYER);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(Menu_pane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(Rules_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(Game_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addGap(0, 8, Short.MAX_VALUE)
        .addComponent(Menu_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(Rules_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(Game_pane, 608, 608, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    Rules_pane.setVisible(false);
    Game_pane.setVisible(false);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void Start_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Start_buttonActionPerformed
    // TODO add your handling code here:
//    reset();
    this.setVisible(false);
    JFrame_login.setVisible(true);
    //Start_button.setVisible(false);
    Level_pane.setVisible(true);
  }//GEN-LAST:event_Start_buttonActionPerformed

  private void Rule_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rule_buttonActionPerformed
    // TODO add your handling code here:
    Rules_pane.setVisible(true);
    Menu_pane.setVisible(false);
  }//GEN-LAST:event_Rule_buttonActionPerformed

  private void Back_Rule_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_Rule_buttonActionPerformed
    // TODO add your handling code here:
    Menu_pane.setVisible(true);
    Rules_pane.setVisible(false);
  }//GEN-LAST:event_Back_Rule_buttonActionPerformed

  private void ConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmButtonActionPerformed
    // TODO add your handling code here:
    //reset col
    
    for(int i=0;i<4;i++){
      for(int j=0;j<8;j++){
        if(check_buttons[i].getBackground()==pinColor[j]){
          bg.input[i]=j;
        }
      }
      //copy the color of check to record
      record_buttons[row][i].setBackground(check_buttons[i].getBackground());
      //reset check buttons
      check_buttons[i].setBackground(Color.white);
      //disable check buttons
      check_buttons[i].setEnabled(false);
    }
    //disable confirm button
    ConfirmButton.setEnabled(false);
    //background check method
    int chk=bg.check();
    System.out.println("Frame chk result = "+chk);
    int temp=0;
    if(chk==40){
      for(int i=0;i<4;i++){
        result_buttons[row][i].setText("X");
      }
      System.out.println("YOU WIN");
      //update row to stop the loop
      win_lose_panel.setVisible(true);
      win_lose_panel.repaint();
      //reset
      reset();
    }
    else{
      if(chk/10 >0){
        for(int i=0;i<chk/10;i++){
          result_buttons[row][temp].setText("X");
          bg.result[row][temp]='X';
          temp++;
        }
      }
      if((chk-chk/10)!=0){
        for(int i=0;i<(chk%10);i++){
          result_buttons[row][temp].setText("O");
          bg.result[row][temp]='O';
          temp++;
        }
      }
//      ResultSave();
      RecordSave();
    }
    for(int i=0;i<10;i++){
      for(int j=0;j<4;j++){
        System.out.print(bg.record[i][j]+" ");
      }
      System.out.println("");
    }
    for(int i=0;i<10;i++){
      for(int j=0;j<4;j++){
        System.out.print(bg.result[i][j]+" ");
      }
      System.out.println("");
    }
    //enable button
    if(bg.win==false && bg.count<10){
      for(int i=0;i<8;i++){
        pin_buttons[i].setEnabled(true);
      }
    }
    else{
      win_lose_panel.setVisible(true);
      win_lose_panel.repaint();
    }
    //update row
    row++;
    System.out.println("row="+row);
  }//GEN-LAST:event_ConfirmButtonActionPerformed

  private void Continue_buttonMouseClicked(java.awt.event.MouseEvent evt) {                                      
    // TODO add your handling code here:
    ResultLoad();
    RecordLoad();
    AnswerLoad();
    Menu_pane.setVisible(false);
    Game_pane.setVisible(true);
    //update try counter
    bg.count=0;
    for(int i=0;i<10;i++){
      if(bg.record[i][0]!=9)
        bg.count++;
    }
  } 
  
  private void panelRecord(){
    record_buttons = new JButton[10][4];
    RecordPanel.setLayout(new GridLayout(10,4));
    for(int i=0;i<10;i++){
      for(int j=0;j<4;j++){
        record_buttons[i][j] = new JButton();
        record_buttons[i][j].setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        record_buttons[i][j].setBackground(Color.white);
        record_buttons[i][j].setEnabled(false);
        //add panel array to the record_buttons panel
        RecordPanel.add(record_buttons[i][j]);
      }
    }
  }
  
  private void panelResult(){
    result_buttons = new JButton[10][4];
    ResultPanel.setLayout(new GridLayout(10,4));
    for(int i=0;i<10;i++){
      for(int j=0;j<4;j++){
        result_buttons[i][j] = new JButton();
        result_buttons[i][j].setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        result_buttons[i][j].setBackground(Color.white);
        result_buttons[i][j].setEnabled(false);
        //add jbutton array to the result_buttons panel
        ResultPanel.add(result_buttons[i][j]);
      }
    }
  }
  
  //need add actionlistener
  private void panelColor(){
    pinColor = new Color[8];
    pin_buttons = new JButton[8];
    
    pinColor[0] = Color.red;
    pinColor[1] = Color.yellow;
    pinColor[2] = Color.blue;
    pinColor[3] = Color.orange;
    pinColor[4] = Color.magenta;
    pinColor[5] = Color.green;
    pinColor[6] = Color.pink;
    pinColor[7] = Color.cyan;
    
    InputPanel.setLayout(new GridLayout(1,8));
    
    for(int i=0;i<8;i++){
      pin_buttons[i] = new JButton();
      pin_buttons[i].setBackground(pinColor[i]);
      pin_buttons[i].addActionListener(pinclk);
      InputPanel.add(pin_buttons[i]);
    }
  }
  
  private void level_gen(){
    String[] levelstr = {"Easy", "Hard"};
    level_buttons = new JButton[2];
    Level_pane.setLayout(new GridLayout(1,2));
    for(int i=0;i<2;i++){
      level_buttons[i] = new JButton();
      level_buttons[i].setText(levelstr[i]);
      level_buttons[i].setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
      level_buttons[i].setEnabled(true);
      level_buttons[i].addActionListener(levelclk);
      level_buttons[i].setPreferredSize(new Dimension(100,100));
      Level_pane.add(level_buttons[i]);
    }
  }
  
  private void panelCheck(){
    check_buttons = new JButton[4];
    CheckPanel.setLayout(new GridLayout(1,4));
    for(int i=0;i<4;i++){
      check_buttons[i] = new JButton();
      check_buttons[i].setEnabled(false);
      check_buttons[i].setBackground(Color.white);
      check_buttons[i].addActionListener(chkclk);
      CheckPanel.add(check_buttons[i]);
    }
  }
  
  private void buttonEnterCheck(){
    boolean valid=true;
    for(int i=0;i<4;i++){
      if(check_buttons[i].getBackground()==Color.white){
        valid=false;
      }
    }
    if(valid==true){
      ConfirmButton.setEnabled(true);
    }
  }
  private boolean checkColor(){
    for(int i=0;i<4;i++){
      if(check_buttons[i].getBackground()==Color.white)
        return false;
    }
    return true;
  }
  /**
   * @param args the command line arguments
   */
//  public static void main(String args[]) {
//    /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//     */
//    try {
//      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//        if ("Nimbus".equals(info.getName())) {
//          javax.swing.UIManager.setLookAndFeel(info.getClassName());
//          break;
//        }
//      }
//    } catch (ClassNotFoundException ex) {
//      java.util.logging.Logger.getLogger(JFrame_Mastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//    } catch (InstantiationException ex) {
//      java.util.logging.Logger.getLogger(JFrame_Mastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//    } catch (IllegalAccessException ex) {
//      java.util.logging.Logger.getLogger(JFrame_Mastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//      java.util.logging.Logger.getLogger(JFrame_Mastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//    }
//        //</editor-fold>
//        //</editor-fold>
//
//    /* Create and display the form */
//    java.awt.EventQueue.invokeLater(new Runnable() {
//      public void run() {
//        new JFrame_Mastermind().setVisible(true);
//      }
//    });
//  }
  public class ButtonListenerPin implements ActionListener{
    @Override
    public void actionPerformed(ActionEvent e) {
      boolean done=false;
      for(int i=0;i<8;i++){
        if(e.getSource()==pin_buttons[i]){
          for(int j=0;j<4 && done==false;j++){
            if(check_buttons[j].getBackground()==Color.white){
              check_buttons[j].setBackground(pinColor[i]);
              check_buttons[j].setEnabled(true);
              done=true;
            }
          }
          if(checkColor()){
            ConfirmButton.setEnabled(true); 
          }
        }
      }
    }
  }
  public class ButtonListenerCheck implements ActionListener{
    @Override
    public void actionPerformed(ActionEvent e) {
      for(int i=0;i<4;i++){
        if(e.getSource()==check_buttons[i]){
          check_buttons[i].setBackground(Color.white);
          check_buttons[i].setEnabled(false);
        }
      }
      ConfirmButton.setEnabled(false);
    }
  }
  public class ButtonListenerLevel implements ActionListener{
    @Override
    public void actionPerformed(ActionEvent e) {
      for(int i=0;i<2;i++){
        if(e.getSource()==level_buttons[i]){
          Menu_pane.setVisible(false);
          Game_pane.setVisible(true);
          level=i;
          System.out.println("level="+i);
          bg.AnswerGen(level);
        }
      }
    }
  }
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton Back_Rule_button;
  private javax.swing.JPanel CheckPanel;
  private javax.swing.JButton ConfirmButton;
  private javax.swing.JLayeredPane Game_pane;
  private javax.swing.JPanel InputPanel;
  private javax.swing.JLabel Input_Label;
  private javax.swing.JPanel Level_pane;
  private javax.swing.JLayeredPane Menu_pane;
  private javax.swing.JPanel RecordPanel;
  private javax.swing.JPanel ResultPanel;
  private javax.swing.JLabel Result_Label;
  private javax.swing.JButton Rule_button;
  private javax.swing.JLayeredPane Rules_pane;
  private javax.swing.JButton Start_button;
  private javax.swing.JLabel Title_label;
  private javax.swing.JLabel answer_label;
  private javax.swing.JLabel counter_label;
  private javax.swing.JLabel counter_result_label;
  private javax.swing.JLabel win_lose_label;
  private javax.swing.JPanel win_lose_panel;
  // End of variables declaration//GEN-END:variables

  //save load methods
  public void AnswerLoad(){
    try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream("Answer.txt"), "UTF-8"))) {
      String temp;
      temp=reader.readLine();
      System.out.println(temp);
      System.out.println(temp.length());
      for(int i=0;i<4;i++){
        bg.answer[i]=(int)(temp.charAt(i))-48;
      }
      reader.close();
    } catch (IOException ex){
      ex.printStackTrace();
    }
  }
  
  private void RecordSave(){
    try(BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("Record.txt"), "UTF-8"))){
      for(int i=0;i<10;i++){
        for(int j=0;j<4;j++){
          if(bg.record[i][j]!=9)
            writer.write(new Integer(bg.record[i][j]).toString());
          else
            writer.write(" ");
        }
        writer.write("\n");
      }
      writer.close();
    }catch (IOException ex){
      //handle me
      ex.printStackTrace();
    }
  }
  
  public void RecordLoad(){
    try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream("Record.txt"), "UTF-8"))) {
      String temp;
      int count=0;
      if((temp=reader.readLine())!=null){
        for(int j=0;j<4;j++){
          if(temp.charAt(j)!=' ')
            bg.record[count][j]=(int)(temp.charAt(j))-48;
          else
            bg.record[count][j]=9;    //9=empty
          }
        count++;
      }
    } catch (IOException ex){
      ex.printStackTrace();
    }
  }
  
  private void ResultSave(){
    try(BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("Result.txt"), "UTF-8"))){
      for(int i=0;i<10;i++){
        for(int j=0;j<4;j++){
          writer.write(String.valueOf(bg.result[i][j]));
        }
        writer.write("\n");
      }
      writer.close();
    }catch (IOException ex){
      //handle me
      ex.printStackTrace();
    }
  }
  
  public void ResultLoad(){
    try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream("Result.txt"), "utf-8"))) {
      String temp;
      int count=0;
      if((temp=reader.readLine())!=null){
        for(int j=0;j<4;j++){
          bg.result[count][j]=temp.charAt(j);
        }
        count++;
      }
    } catch (IOException ex){
      ex.printStackTrace();
    }
  }
  
  public void reset(){
    File[] file = new File[3];
    String[] FileName = {"Answer.txt", "Result.txt", "Record.txt"};
    for(int i=0;i<3;i++){
      file[i] = new File(FileName[i]);
      file[i].delete();
    }
  }
}
