/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proj1;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JPanel;

/**
 *
 * @author Himkw_000
 */
public class JFrame_Mastermind extends javax.swing.JFrame {
  //result panel create disbale buttons -> can add text
  //record panel create panels -> only fill backgroud color
  /**
   * Creates new form Mastermind
   */
  
  //Declare variabels
  JButton[][] record_buttons;
  JButton[][] result_buttons;
  JButton[] check_buttons;
  JButton[] pin_buttons;
  JButton[] level_buttons;
  Color[] pinColor;
  int row=0;  //row 0-9
  ButtonListenerPin pinclk = new ButtonListenerPin();
  ButtonListenerCheck chkclk = new ButtonListenerCheck();
  ButtonListenerLevel levelclk = new ButtonListenerLevel();
  Background bg = new Background();
  int level;    //level=0 -> easy || level=1 ->hard
  //TextInputs JFrame_login = new TextInputs();
  public JFrame_Mastermind() {
    initComponents();
//    Login.setVisible(false);
//    Menu_pane.setVisible(false);
//    Rules_pane.setVisible(false);
//    Game_pane.setVisible(true);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    Login = new javax.swing.JLayeredPane();
    jSignUpLogin = new javax.swing.JPanel();
    invalidUsername = new javax.swing.JInternalFrame();
    checkMarkIconLabel = new javax.swing.JLabel();
    checkMessageLabel = new javax.swing.JLabel();
    doneButton2 = new javax.swing.JButton();
    left_panel = new javax.swing.JPanel();
    registerButton = new javax.swing.JButton();
    lastNameField = new javax.swing.JTextField();
    emailErrorLabel = new javax.swing.JLabel();
    signUpLabel = new javax.swing.JLabel();
    passwordErrorLabel = new javax.swing.JLabel();
    usernameErrorLabel = new javax.swing.JLabel();
    passwordField = new javax.swing.JTextField();
    emailField = new javax.swing.JTextField();
    usernameField = new javax.swing.JTextField();
    checkButton = new javax.swing.JButton();
    firstNameField = new javax.swing.JTextField();
    jCheckBox1 = new javax.swing.JCheckBox();
    jCheckBox2 = new javax.swing.JCheckBox();
    signInButton = new javax.swing.JButton();
    usernameNotFoundErrorLabel = new javax.swing.JLabel();
    usernameField2 = new javax.swing.JTextField();
    passwordField2 = new javax.swing.JTextField();
    loginLabel = new javax.swing.JLabel();
    right_panel = new javax.swing.JPanel();
    Rules_pane = new javax.swing.JLayeredPane();
    Back_Rule_button = new javax.swing.JButton();
    Game_pane = new javax.swing.JLayeredPane();
    win_lose_panel = new javax.swing.JPanel();
    win_lose_label = new javax.swing.JLabel();
    counter_result_label = new javax.swing.JLabel();
    answer_label = new javax.swing.JLabel();
    InputPanel = new javax.swing.JPanel();
    CheckPanel = new javax.swing.JPanel();
    ConfirmButton = new javax.swing.JButton();
    Result_Label = new javax.swing.JLabel();
    Input_Label = new javax.swing.JLabel();
    counter_label = new javax.swing.JLabel();
    ResultPanel = new javax.swing.JPanel();
    RecordPanel = new javax.swing.JPanel();
    Menu_pane = new javax.swing.JLayeredPane();
    Level_pane = new javax.swing.JPanel();
    Start_button = new javax.swing.JButton();
    Rule_button = new javax.swing.JButton();
    Title_label = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setPreferredSize(new java.awt.Dimension(400, 650));

    Login.setVisible(false);
    Login.setLocation(0, 0);
    Login.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

    jSignUpLogin.setMinimumSize(new java.awt.Dimension(640, 461));
    jSignUpLogin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    invalidUsername.setTitle("Username Availability");
    invalidUsername.setFrameIcon(null);
    invalidUsername.setVisible(false);

    checkMarkIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proj1/exclamation_point_100x100.png"))); // NOI18N

    checkMessageLabel.setFont(new java.awt.Font("Rockwell", 0, 24)); // NOI18N
    checkMessageLabel.setText("Username is unavailable");

    doneButton2.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
    doneButton2.setText("done");
    doneButton2.setFocusable(false);
    doneButton2.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        doneButton2MouseClicked(evt);
      }
    });

    javax.swing.GroupLayout invalidUsernameLayout = new javax.swing.GroupLayout(invalidUsername.getContentPane());
    invalidUsername.getContentPane().setLayout(invalidUsernameLayout);
    invalidUsernameLayout.setHorizontalGroup(
      invalidUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(invalidUsernameLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(checkMarkIconLabel)
        .addGroup(invalidUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(invalidUsernameLayout.createSequentialGroup()
            .addGap(51, 51, 51)
            .addComponent(checkMessageLabel))
          .addGroup(invalidUsernameLayout.createSequentialGroup()
            .addGap(130, 130, 130)
            .addComponent(doneButton2)))
        .addContainerGap(29, Short.MAX_VALUE))
    );
    invalidUsernameLayout.setVerticalGroup(
      invalidUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(invalidUsernameLayout.createSequentialGroup()
        .addGroup(invalidUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(invalidUsernameLayout.createSequentialGroup()
            .addGap(29, 29, 29)
            .addComponent(checkMarkIconLabel))
          .addGroup(invalidUsernameLayout.createSequentialGroup()
            .addGap(50, 50, 50)
            .addComponent(checkMessageLabel)
            .addGap(18, 18, 18)
            .addComponent(doneButton2)))
        .addContainerGap(41, Short.MAX_VALUE))
    );

    jSignUpLogin.add(invalidUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 480, 200));

    left_panel.setOpaque(false);
    left_panel.setPreferredSize(new java.awt.Dimension(339, 511));

    registerButton.setBackground(new java.awt.Color(102, 102, 102));
    registerButton.setForeground(new java.awt.Color(204, 204, 204));
    registerButton.setText("Register");
    registerButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, java.awt.Color.lightGray, java.awt.Color.white));
    registerButton.setPreferredSize(new java.awt.Dimension(80, 40));
    registerButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseMoved(java.awt.event.MouseEvent evt) {
        registerButtonMouseMoved(evt);
      }
    });
    registerButton.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        registerButtonFocusLost(evt);
      }
    });
    registerButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        registerButtonMouseClicked(evt);
      }
    });

    lastNameField.setText("Last name");
    lastNameField.setPreferredSize(new java.awt.Dimension(200, 30));
    lastNameField.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        lastNameFieldFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt) {
        lastNameFieldFocusLost(evt);
      }
    });

    emailErrorLabel.setVisible(false);
    emailErrorLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
    emailErrorLabel.setForeground(new java.awt.Color(255, 102, 102));
    emailErrorLabel.setText("Please enter valid email address\n");

    signUpLabel.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 36)); // NOI18N
    signUpLabel.setForeground(new java.awt.Color(204, 204, 204));
    signUpLabel.setText("Sign Up");

    passwordErrorLabel.setVisible(false);
    passwordErrorLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
    passwordErrorLabel.setForeground(new java.awt.Color(255, 102, 102));
    passwordErrorLabel.setText("At least1 uppercase, 1 lowercase, 1 numeric, 8 - 15 chars.");

    usernameErrorLabel.setVisible(false);
    usernameErrorLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
    usernameErrorLabel.setForeground(new java.awt.Color(255, 102, 102));
    usernameErrorLabel.setText("Must contain 1 lowercase, 4 - 10 chars");
    usernameErrorLabel.setToolTipText("");

    passwordField.setText("Password");
    passwordField.setPreferredSize(new java.awt.Dimension(200, 30));
    passwordField.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        passwordFieldFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt) {
        passwordFieldFocusLost(evt);
      }
    });
    passwordField.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        passwordFieldActionPerformed(evt);
      }
    });

    emailField.setText("Email address");
    emailField.setPreferredSize(new java.awt.Dimension(200, 30));
    emailField.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        emailFieldFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt) {
        emailFieldFocusLost(evt);
      }
    });

    usernameField.setText("Username");
    usernameField.setPreferredSize(new java.awt.Dimension(200, 30));
    usernameField.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        usernameFieldFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt) {
        usernameFieldFocusLost(evt);
      }
    });

    checkButton.setBackground(new java.awt.Color(102, 102, 102));
    checkButton.setForeground(new java.awt.Color(204, 204, 204));
    checkButton.setText("check");
    checkButton.setToolTipText("Check availablility");
    checkButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, java.awt.Color.lightGray, java.awt.Color.white));
    checkButton.setPreferredSize(new java.awt.Dimension(80, 40));
    checkButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        checkButtonMouseClicked(evt);
      }
    });

    firstNameField.setText("First name");
    firstNameField.setPreferredSize(new java.awt.Dimension(200, 30));
    firstNameField.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        firstNameFieldFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt) {
        firstNameFieldFocusLost(evt);
      }
    });

    jCheckBox1.setText("Male");
    jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jCheckBox1ActionPerformed(evt);
      }
    });

    jCheckBox2.setText("Female");

    javax.swing.GroupLayout left_panelLayout = new javax.swing.GroupLayout(left_panel);
    left_panel.setLayout(left_panelLayout);
    left_panelLayout.setHorizontalGroup(
      left_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, left_panelLayout.createSequentialGroup()
        .addContainerGap(298, Short.MAX_VALUE)
        .addGroup(left_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jCheckBox2)
          .addComponent(jCheckBox1))
        .addGap(43, 43, 43))
      .addGroup(left_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(left_panelLayout.createSequentialGroup()
          .addGap(0, 0, Short.MAX_VALUE)
          .addGroup(left_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(left_panelLayout.createSequentialGroup()
              .addGap(60, 60, 60)
              .addComponent(signUpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(left_panelLayout.createSequentialGroup()
              .addGap(48, 48, 48)
              .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(left_panelLayout.createSequentialGroup()
              .addGap(48, 48, 48)
              .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(left_panelLayout.createSequentialGroup()
              .addGap(50, 50, 50)
              .addComponent(emailErrorLabel))
            .addGroup(left_panelLayout.createSequentialGroup()
              .addGap(50, 50, 50)
              .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(left_panelLayout.createSequentialGroup()
              .addGap(50, 50, 50)
              .addComponent(usernameErrorLabel))
            .addGroup(left_panelLayout.createSequentialGroup()
              .addGap(50, 50, 50)
              .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addGap(0, 0, 0)
              .addComponent(checkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(passwordErrorLabel)
            .addGroup(left_panelLayout.createSequentialGroup()
              .addGap(50, 50, 50)
              .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(left_panelLayout.createSequentialGroup()
              .addGap(100, 100, 100)
              .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
          .addGap(0, 0, Short.MAX_VALUE)))
    );
    left_panelLayout.setVerticalGroup(
      left_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, left_panelLayout.createSequentialGroup()
        .addContainerGap(369, Short.MAX_VALUE)
        .addComponent(jCheckBox1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jCheckBox2)
        .addGap(92, 92, 92))
      .addGroup(left_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(left_panelLayout.createSequentialGroup()
          .addGap(0, 0, Short.MAX_VALUE)
          .addComponent(signUpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGap(25, 25, 25)
          .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGap(18, 18, 18)
          .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGap(7, 7, 7)
          .addComponent(emailErrorLabel)
          .addGap(4, 4, 4)
          .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGap(10, 10, 10)
          .addComponent(usernameErrorLabel)
          .addGap(4, 4, 4)
          .addGroup(left_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(checkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGap(10, 10, 10)
          .addComponent(passwordErrorLabel)
          .addGap(4, 4, 4)
          .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGap(10, 10, 10)
          .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGap(0, 0, Short.MAX_VALUE)))
    );

    jSignUpLogin.add(left_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1, 1, 400, 510));
    left_panel.setVisible(true);

    signInButton.setBackground(new java.awt.Color(102, 102, 102));
    signInButton.setForeground(new java.awt.Color(204, 204, 204));
    signInButton.setText("Sign in");
    signInButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, java.awt.Color.lightGray, java.awt.Color.white));
    signInButton.setPreferredSize(new java.awt.Dimension(70, 40));
    signInButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        signInButtonMouseClicked(evt);
      }
    });
    jSignUpLogin.add(signInButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 290, 90, -1));

    usernameNotFoundErrorLabel.setVisible(false);
    usernameNotFoundErrorLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
    usernameNotFoundErrorLabel.setForeground(new java.awt.Color(255, 102, 102));
    usernameNotFoundErrorLabel.setText("Username not found! Please sign up.");
    jSignUpLogin.add(usernameNotFoundErrorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, -1, -1));

    usernameField2.setText("Username");
    usernameField2.setPreferredSize(new java.awt.Dimension(200, 30));
    usernameField2.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        usernameField2FocusGained(evt);
      }
    });
    jSignUpLogin.add(usernameField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 170, -1, -1));

    passwordField2.setText("Password");
    passwordField2.setPreferredSize(new java.awt.Dimension(200, 30));
    passwordField2.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        passwordField2FocusGained(evt);
      }
    });
    jSignUpLogin.add(passwordField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 230, -1, -1));

    loginLabel.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 36)); // NOI18N
    loginLabel.setForeground(new java.awt.Color(204, 204, 204));
    loginLabel.setText("Login");
    jSignUpLogin.add(loginLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 100, -1, -1));

    javax.swing.GroupLayout right_panelLayout = new javax.swing.GroupLayout(right_panel);
    right_panel.setLayout(right_panelLayout);
    right_panelLayout.setHorizontalGroup(
      right_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 290, Short.MAX_VALUE)
    );
    right_panelLayout.setVerticalGroup(
      right_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 510, Short.MAX_VALUE)
    );

    jSignUpLogin.add(right_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 0, 290, 510));

    javax.swing.GroupLayout LoginLayout = new javax.swing.GroupLayout(Login);
    Login.setLayout(LoginLayout);
    LoginLayout.setHorizontalGroup(
      LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(LoginLayout.createSequentialGroup()
        .addComponent(jSignUpLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(0, 18, Short.MAX_VALUE))
    );
    LoginLayout.setVerticalGroup(
      LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginLayout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jSignUpLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(202, 202, 202))
    );
    Login.setLayer(jSignUpLogin, javax.swing.JLayeredPane.DEFAULT_LAYER);

    Back_Rule_button.setText("Back");
    Back_Rule_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        Back_Rule_buttonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout Rules_paneLayout = new javax.swing.GroupLayout(Rules_pane);
    Rules_pane.setLayout(Rules_paneLayout);
    Rules_paneLayout.setHorizontalGroup(
      Rules_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Rules_paneLayout.createSequentialGroup()
        .addGap(0, 345, Short.MAX_VALUE)
        .addComponent(Back_Rule_button))
    );
    Rules_paneLayout.setVerticalGroup(
      Rules_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(Rules_paneLayout.createSequentialGroup()
        .addComponent(Back_Rule_button)
        .addGap(0, 577, Short.MAX_VALUE))
    );
    Rules_pane.setLayer(Back_Rule_button, javax.swing.JLayeredPane.DEFAULT_LAYER);

    Game_pane.setPreferredSize(new java.awt.Dimension(400, 600));

    win_lose_panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

    win_lose_label.setText("win/lose");
    win_lose_label.setMaximumSize(new java.awt.Dimension(200, 50));
    win_lose_label.setMinimumSize(new java.awt.Dimension(200, 50));
    win_lose_label.setPreferredSize(new java.awt.Dimension(200, 50));

    counter_result_label.setText(" total try");
    counter_result_label.setMaximumSize(new java.awt.Dimension(200, 50));
    counter_result_label.setMinimumSize(new java.awt.Dimension(200, 50));
    counter_result_label.setPreferredSize(new java.awt.Dimension(200, 50));

    answer_label.setText(" correct answer");
    answer_label.setMaximumSize(new java.awt.Dimension(200, 50));
    answer_label.setMinimumSize(new java.awt.Dimension(200, 50));
    answer_label.setPreferredSize(new java.awt.Dimension(200, 50));

    javax.swing.GroupLayout win_lose_panelLayout = new javax.swing.GroupLayout(win_lose_panel);
    win_lose_panel.setLayout(win_lose_panelLayout);
    win_lose_panelLayout.setHorizontalGroup(
      win_lose_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(win_lose_panelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(win_lose_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(answer_label, javax.swing.GroupLayout.PREFERRED_SIZE, 190, Short.MAX_VALUE)
          .addComponent(counter_result_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
          .addComponent(win_lose_label, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        .addGap(0, 0, Short.MAX_VALUE))
    );
    win_lose_panelLayout.setVerticalGroup(
      win_lose_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(win_lose_panelLayout.createSequentialGroup()
        .addComponent(win_lose_label, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(0, 0, 0)
        .addComponent(counter_result_label, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(0, 0, 0)
        .addComponent(answer_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    win_lose_label.setBackground(Color.white);

    InputPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    InputPanel.setPreferredSize(new java.awt.Dimension(320, 40));

    javax.swing.GroupLayout InputPanelLayout = new javax.swing.GroupLayout(InputPanel);
    InputPanel.setLayout(InputPanelLayout);
    InputPanelLayout.setHorizontalGroup(
      InputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 318, Short.MAX_VALUE)
    );
    InputPanelLayout.setVerticalGroup(
      InputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 38, Short.MAX_VALUE)
    );

    CheckPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    CheckPanel.setPreferredSize(new java.awt.Dimension(160, 40));

    javax.swing.GroupLayout CheckPanelLayout = new javax.swing.GroupLayout(CheckPanel);
    CheckPanel.setLayout(CheckPanelLayout);
    CheckPanelLayout.setHorizontalGroup(
      CheckPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 158, Short.MAX_VALUE)
    );
    CheckPanelLayout.setVerticalGroup(
      CheckPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 0, Short.MAX_VALUE)
    );

    ConfirmButton.setText("Enter");
    ConfirmButton.setPreferredSize(new java.awt.Dimension(160, 40));
    ConfirmButton.setEnabled(false);
    ConfirmButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        ConfirmButtonActionPerformed(evt);
      }
    });

    Result_Label.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
    Result_Label.setText("Result");

    Input_Label.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
    Input_Label.setText("Input");

    counter_label.setText("counter_label");
    counter_label.setVisible(false);

    ResultPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    ResultPanel.setPreferredSize(new java.awt.Dimension(160, 400));

    javax.swing.GroupLayout ResultPanelLayout = new javax.swing.GroupLayout(ResultPanel);
    ResultPanel.setLayout(ResultPanelLayout);
    ResultPanelLayout.setHorizontalGroup(
      ResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 0, Short.MAX_VALUE)
    );
    ResultPanelLayout.setVerticalGroup(
      ResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 398, Short.MAX_VALUE)
    );

    RecordPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    RecordPanel.setPreferredSize(new java.awt.Dimension(160, 400));

    javax.swing.GroupLayout RecordPanelLayout = new javax.swing.GroupLayout(RecordPanel);
    RecordPanel.setLayout(RecordPanelLayout);
    RecordPanelLayout.setHorizontalGroup(
      RecordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 158, Short.MAX_VALUE)
    );
    RecordPanelLayout.setVerticalGroup(
      RecordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 398, Short.MAX_VALUE)
    );

    javax.swing.GroupLayout Game_paneLayout = new javax.swing.GroupLayout(Game_pane);
    Game_pane.setLayout(Game_paneLayout);
    Game_paneLayout.setHorizontalGroup(
      Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(Game_paneLayout.createSequentialGroup()
        .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(Game_paneLayout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(CheckPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(RecordPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(Input_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(60, 60, 60)
            .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(ResultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(ConfirmButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(Result_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
          .addGroup(Game_paneLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(InputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(counter_label)))
        .addContainerGap())
      .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(Game_paneLayout.createSequentialGroup()
          .addGap(97, 97, 97)
          .addComponent(win_lose_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addContainerGap(101, Short.MAX_VALUE)))
    );
    Game_paneLayout.setVerticalGroup(
      Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Game_paneLayout.createSequentialGroup()
        .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(Game_paneLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(counter_label)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Game_paneLayout.createSequentialGroup()
            .addContainerGap(24, Short.MAX_VALUE)
            .addComponent(InputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)))
        .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(CheckPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(ConfirmButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGap(18, 18, 18)
        .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(Result_Label)
          .addComponent(Input_Label))
        .addGap(16, 16, 16)
        .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(ResultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(RecordPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(30, 30, 30))
      .addGroup(Game_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(Game_paneLayout.createSequentialGroup()
          .addGap(135, 135, 135)
          .addComponent(win_lose_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addContainerGap(321, Short.MAX_VALUE)))
    );
    Game_pane.setLayer(win_lose_panel, javax.swing.JLayeredPane.DEFAULT_LAYER);

    win_lose_panel.setBackground(Color.white);
    win_lose_panel.setVisible(false);
    Game_pane.setLayer(InputPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
    panelColor();
    Game_pane.setLayer(CheckPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
    panelCheck();
    Game_pane.setLayer(ConfirmButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
    Game_pane.setLayer(Result_Label, javax.swing.JLayeredPane.DEFAULT_LAYER);
    Game_pane.setLayer(Input_Label, javax.swing.JLayeredPane.DEFAULT_LAYER);
    Game_pane.setLayer(counter_label, javax.swing.JLayeredPane.DEFAULT_LAYER);
    Game_pane.setLayer(ResultPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
    panelResult();
    Game_pane.setLayer(RecordPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
    panelRecord();

    Menu_pane.setPreferredSize(new java.awt.Dimension(400, 600));

    Level_pane.setPreferredSize(new java.awt.Dimension(200, 100));
    Level_pane.setVisible(false);

    javax.swing.GroupLayout Level_paneLayout = new javax.swing.GroupLayout(Level_pane);
    Level_pane.setLayout(Level_paneLayout);
    Level_paneLayout.setHorizontalGroup(
      Level_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 200, Short.MAX_VALUE)
    );
    Level_paneLayout.setVerticalGroup(
      Level_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 100, Short.MAX_VALUE)
    );

    Start_button.setText("Start");
    Start_button.setPreferredSize(new java.awt.Dimension(80, 23));
    Start_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        Start_buttonActionPerformed(evt);
      }
    });

    Rule_button.setText("Rule");
    Rule_button.setPreferredSize(new java.awt.Dimension(80, 23));
    Rule_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        Rule_buttonActionPerformed(evt);
      }
    });

    Title_label.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
    Title_label.setText("Mastermind");

    javax.swing.GroupLayout Menu_paneLayout = new javax.swing.GroupLayout(Menu_pane);
    Menu_pane.setLayout(Menu_paneLayout);
    Menu_paneLayout.setHorizontalGroup(
      Menu_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Menu_paneLayout.createSequentialGroup()
        .addGap(92, 92, 92)
        .addComponent(Title_label)
        .addGap(92, 92, 92))
      .addGroup(Menu_paneLayout.createSequentialGroup()
        .addGap(147, 147, 147)
        .addGroup(Menu_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(Rule_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(Start_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
      .addGroup(Menu_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(Menu_paneLayout.createSequentialGroup()
          .addGap(100, 100, 100)
          .addComponent(Level_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addContainerGap(100, Short.MAX_VALUE)))
    );
    Menu_paneLayout.setVerticalGroup(
      Menu_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Menu_paneLayout.createSequentialGroup()
        .addContainerGap(152, Short.MAX_VALUE)
        .addComponent(Title_label)
        .addGap(131, 131, 131)
        .addComponent(Start_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(63, 63, 63)
        .addComponent(Rule_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(164, 164, 164))
      .addGroup(Menu_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(Menu_paneLayout.createSequentialGroup()
          .addGap(250, 250, 250)
          .addComponent(Level_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addContainerGap(250, Short.MAX_VALUE)))
    );
    Menu_pane.setLayer(Level_pane, javax.swing.JLayeredPane.DEFAULT_LAYER);

    level_gen();
    Menu_pane.setLayer(Start_button, javax.swing.JLayeredPane.DEFAULT_LAYER);
    Menu_pane.setLayer(Rule_button, javax.swing.JLayeredPane.DEFAULT_LAYER);
    Menu_pane.setLayer(Title_label, javax.swing.JLayeredPane.DEFAULT_LAYER);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(Menu_pane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(Rules_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(Game_pane, 409, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
          .addComponent(Login, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGap(0, 0, Short.MAX_VALUE)))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addGap(0, 50, Short.MAX_VALUE)
        .addComponent(Menu_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(Rules_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(Game_pane, 608, 608, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
          .addComponent(Login, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGap(0, 139, Short.MAX_VALUE)))
    );

    Rules_pane.setVisible(false);
    Game_pane.setVisible(false);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void Start_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Start_buttonActionPerformed
    // TODO add your handling code here:
//    reset();
    Menu_pane.setVisible(false);
    Login.setVisible(true);
    //Start_button.setVisible(false);
    Level_pane.setVisible(true);
    this.setSize(new Dimension(680,650));
  }//GEN-LAST:event_Start_buttonActionPerformed

  private void Rule_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rule_buttonActionPerformed
    // TODO add your handling code here:
    Rules_pane.setVisible(true);
    Menu_pane.setVisible(false);
  }//GEN-LAST:event_Rule_buttonActionPerformed

  private void Back_Rule_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_Rule_buttonActionPerformed
    // TODO add your handling code here:
    Menu_pane.setVisible(true);
    Rules_pane.setVisible(false);
  }//GEN-LAST:event_Back_Rule_buttonActionPerformed

  private void ConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmButtonActionPerformed
    // TODO add your handling code here:
    //reset col
    //get pin color index
    for(int i=0;i<4;i++){
      for(int j=0;j<8;j++){
        if(check_buttons[i].getBackground()==pinColor[j]){
          bg.input[i]=j;
        }
      }
      //copy the color of check to record
      record_buttons[row][i].setBackground(check_buttons[i].getBackground());
      //reset check buttons
      check_buttons[i].setBackground(Color.white);
      //disable check buttons
      check_buttons[i].setEnabled(false);
    }
    //disable confirm button
    ConfirmButton.setEnabled(false);
    //background check method
    int chk=bg.check();
    System.out.println("Frame chk result = "+chk);
    int temp=0;
    if(chk==40){
      for(int i=0;i<4;i++){
        result_buttons[row][i].setText("X");
      }
      System.out.println("YOU WIN");
      //update row to stop the loop
      win_lose_panel.setVisible(true);
      win_lose_panel.repaint();
      //reset
      reset();
    }
    else{
      //output result
      if(chk/10 >0){
        for(int i=0;i<chk/10;i++){
          result_buttons[row][temp].setText("X");
          bg.result[row][temp]='X';
          temp++;
        }
      }
      if((chk-chk/10)!=0){
        for(int i=0;i<(chk%10);i++){
          result_buttons[row][temp].setText("O");
          bg.result[row][temp]='O';
          temp++;
        }
      }
      System.out.println("finished output result to gui");
      System.out.println("result save and record save");
      ResultSave();
      RecordSave();
    }
    //output in textbase to confirm
    for(int i=0;i<10;i++){
      for(int j=0;j<4;j++){
        System.out.print(bg.record[i][j]+" ");
      }
      System.out.println("");
    }
    for(int i=0;i<10;i++){
      for(int j=0;j<4;j++){
        System.out.print(bg.result[i][j]+" ");
      }
      System.out.println("");
    }
    //confirm end
    
    //enable button
    if(bg.win==false && bg.count<10){
      for(int i=0;i<8;i++){
        pin_buttons[i].setEnabled(true);
      }
    }
    else{
      win_lose_panel.setVisible(true);
      win_lose_panel.repaint();
    }
    //update row
    row++;
    System.out.println("row="+row);
  }//GEN-LAST:event_ConfirmButtonActionPerformed

  private void doneButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doneButton2MouseClicked
    // TODO add your handling code here:

    invalidUsername.setVisible(false);
    //jSignUpLogin.setVisible(true);
  }//GEN-LAST:event_doneButton2MouseClicked

  private void registerButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerButtonMouseMoved
    // TODO add your handling code here:

    //if all the textfields are validated, user can click register button
    if(validate.checkFirstName(firstNameField.getText()) &&
      validate.checkLastName(lastNameField.getText()) &&
      validate.checkUsrnm(usernameField.getText()) &&
      validate.checkEmail(emailField.getText()) &&
      validate.checkPasswd(passwordField.getText())) {
      registerButton.setEnabled(true);
    } else {
      registerButton.setEnabled(false);
    }
  }//GEN-LAST:event_registerButtonMouseMoved

  private void registerButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_registerButtonFocusLost
    // TODO add your handling code here:
  }//GEN-LAST:event_registerButtonFocusLost

  private void registerButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerButtonMouseClicked
    // TODO add your handling code here:
    if(registerButton.isEnabled()){

      playerQueries.addPlayer(firstNameField.getText(),
        lastNameField.getText(), emailField.getText(),
        usernameField.getText(), passwordField.getText());
      name=usernameField.getText();
      //makes a new game
      reset();
      //setVisible(true);
      //sets players name as username
      //            game.setPlayersName(usernameField.getText());
      this.setSize(new Dimension(400,650));
      Game_pane.setVisible(true);
      Login.setVisible(false);
    }
  }//GEN-LAST:event_registerButtonMouseClicked

  private void lastNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastNameFieldFocusGained
    // TODO add your handling code here:
    lastNameField.selectAll();
  }//GEN-LAST:event_lastNameFieldFocusGained

  private void lastNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastNameFieldFocusLost
    // TODO add your handling code here:
    if(validate.checkLastName(lastNameField.getText())){
      lastNameField.setBackground(correct);
    }
    else
    lastNameField.setBackground(wrong);
  }//GEN-LAST:event_lastNameFieldFocusLost

  private void passwordFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFieldFocusGained
    // TODO add your handling code here:
    passwordField.selectAll();
  }//GEN-LAST:event_passwordFieldFocusGained

  private void passwordFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFieldFocusLost
    // TODO add your handling code here:
    if(validate.checkPasswd(passwordField.getText())){
      passwordErrorLabel.setVisible(false);
      passwordField.setBackground(correct);
    }
    else {
      passwordErrorLabel.setVisible(true);
      passwordField.setBackground(wrong);
    }
  }//GEN-LAST:event_passwordFieldFocusLost

  private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_passwordFieldActionPerformed

  private void emailFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFieldFocusGained
    // TODO add your handling code here:
    emailField.selectAll();
  }//GEN-LAST:event_emailFieldFocusGained

  private void emailFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFieldFocusLost
    // TODO add your handling code here:
    if(validate.checkEmail(emailField.getText())){
      emailErrorLabel.setVisible(false);
      emailField.setBackground(correct);
    }
    else {
      emailErrorLabel.setVisible(true);
      emailField.setBackground(wrong);
    }
  }//GEN-LAST:event_emailFieldFocusLost

  private void usernameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFieldFocusGained
    // TODO add your handling code here:
    usernameField.selectAll();
  }//GEN-LAST:event_usernameFieldFocusGained

  private void usernameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFieldFocusLost
    // TODO add your handling code here:
    if(validate.checkUsrnm(usernameField.getText())){
      usernameErrorLabel.setVisible(false);
      usernameField.setBackground(correct);
    }
    else {
      usernameErrorLabel.setVisible(true);
      usernameField.setBackground(wrong);
    }
  }//GEN-LAST:event_usernameFieldFocusLost

  private void checkButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkButtonMouseClicked
    // TODO add your handling code here:
    //true = unique
    //only create one object
    
    if(!checkUsername(usernameField.getText())){
      System.out.println("username invalid");
      checkMarkIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proj1/exclamation_point_100x100.png"))); // NOI18N
      checkMessageLabel.setText("Username is unavailable");
    }
    else{
      System.out.println("change text and label");
      checkMarkIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proj1/check_mark_100x100.png"))); // NOI18N
      checkMessageLabel.setText("Username is available");
    }
    invalidUsername.setVisible(true);
  }//GEN-LAST:event_checkButtonMouseClicked

  private void firstNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstNameFieldFocusGained
    // TODO add your handling code here:
    firstNameField.selectAll();
  }//GEN-LAST:event_firstNameFieldFocusGained

  private void firstNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstNameFieldFocusLost
    // TODO add your handling code here:

    if(validate.checkFirstName(firstNameField.getText())){
      firstNameField.setBackground(correct);
    }
    else
    firstNameField.setBackground(wrong);
  }//GEN-LAST:event_firstNameFieldFocusLost

  private void signInButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signInButtonMouseClicked
    // TODO add your handling code here:
    System.out.println("signInButtonMouseClicked");
    System.out.println(usernameField2.getText());
    results =
    playerQueries.getPlayerByUsername(usernameField2.getText());
    
    System.out.println("result size = "+results.size());
    
    if(results.size()>0){
      System.out.println("results not null");
      System.out.println(results.get(0).getPassword());
      if(results.get(0).getPassword().equals(passwordField2.getText())){
        Login.setVisible(false);
        System.out.println("Record load");
        name=results.get(0).getUsername();
        RecordLoad();
        System.out.println("Result Load");
        ResultLoad();
        System.out.println("result load ");
        AnswerLoad();
        Game_pane.setVisible(true);
        this.setSize(new Dimension(400,650));
      }
    }
    else
    usernameNotFoundErrorLabel.setVisible(true);
  }//GEN-LAST:event_signInButtonMouseClicked

  private void usernameField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameField2FocusGained
    // TODO add your handling code here:
    usernameField2.selectAll();
  }//GEN-LAST:event_usernameField2FocusGained

  private void passwordField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordField2FocusGained
    // TODO add your handling code here:
    passwordField2.selectAll();
  }//GEN-LAST:event_passwordField2FocusGained

  private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_jCheckBox1ActionPerformed

  private void Continue_buttonMouseClicked(java.awt.event.MouseEvent evt) {                                      
    // TODO add your handling code here:
    ResultLoad();
    RecordLoad();
    AnswerLoad();
    Menu_pane.setVisible(false);
    Game_pane.setVisible(true);
    //update try counter
    bg.count=0;
    for(int i=0;i<10;i++){
      if(bg.record[i][0]!=9)
        bg.count++;
    }
  } 
  
  private void panelRecord(){
    record_buttons = new JButton[10][4];
    RecordPanel.setLayout(new GridLayout(10,4));
    for(int i=0;i<10;i++){
      for(int j=0;j<4;j++){
        record_buttons[i][j] = new JButton();
        record_buttons[i][j].setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        record_buttons[i][j].setBackground(Color.white);
        record_buttons[i][j].setEnabled(false);
        //add panel array to the record_buttons panel
        RecordPanel.add(record_buttons[i][j]);
      }
    }
  }
  
  private void panelResult(){
    result_buttons = new JButton[10][4];
    ResultPanel.setLayout(new GridLayout(10,4));
    for(int i=0;i<10;i++){
      for(int j=0;j<4;j++){
        result_buttons[i][j] = new JButton();
        result_buttons[i][j].setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        result_buttons[i][j].setBackground(Color.white);
        result_buttons[i][j].setEnabled(false);
        //add jbutton array to the result_buttons panel
        ResultPanel.add(result_buttons[i][j]);
      }
    }
  }
  
  //need add actionlistener
  private void panelColor(){
    pinColor = new Color[8];
    pin_buttons = new JButton[8];
    
    pinColor[0] = Color.red;
    pinColor[1] = Color.yellow;
    pinColor[2] = Color.blue;
    pinColor[3] = Color.orange;
    pinColor[4] = Color.magenta;
    pinColor[5] = Color.green;
    pinColor[6] = Color.pink;
    pinColor[7] = Color.cyan;
    
    InputPanel.setLayout(new GridLayout(1,8));
    
    for(int i=0;i<8;i++){
      pin_buttons[i] = new JButton();
      pin_buttons[i].setBackground(pinColor[i]);
      pin_buttons[i].addActionListener(pinclk);
      InputPanel.add(pin_buttons[i]);
    }
  }
  
  private void level_gen(){
    String[] levelstr = {"Easy", "Hard"};
    level_buttons = new JButton[2];
    Level_pane.setLayout(new GridLayout(1,2));
    for(int i=0;i<2;i++){
      level_buttons[i] = new JButton();
      level_buttons[i].setText(levelstr[i]);
      level_buttons[i].setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
      level_buttons[i].setEnabled(true);
      level_buttons[i].addActionListener(levelclk);
      level_buttons[i].setPreferredSize(new Dimension(100,100));
      Level_pane.add(level_buttons[i]);
    }
  }
  
  private void panelCheck(){
    check_buttons = new JButton[4];
    CheckPanel.setLayout(new GridLayout(1,4));
    for(int i=0;i<4;i++){
      check_buttons[i] = new JButton();
      check_buttons[i].setEnabled(false);
      check_buttons[i].setBackground(Color.white);
      check_buttons[i].addActionListener(chkclk);
      CheckPanel.add(check_buttons[i]);
    }
  }
  
  private void buttonEnterCheck(){
    boolean valid=true;
    for(int i=0;i<4;i++){
      if(check_buttons[i].getBackground()==Color.white){
        valid=false;
      }
    }
    if(valid==true){
      ConfirmButton.setEnabled(true);
    }
  }
  private boolean checkColor(){
    for(int i=0;i<4;i++){
      if(check_buttons[i].getBackground()==Color.white)
        return false;
    }
    return true;
  }
  /**
   * @param args the command line arguments
   */
//  public static void main(String args[]) {
//    /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//     */
//    try {
//      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//        if ("Nimbus".equals(info.getName())) {
//          javax.swing.UIManager.setLookAndFeel(info.getClassName());
//          break;
//        }
//      }
//    } catch (ClassNotFoundException ex) {
//      java.util.logging.Logger.getLogger(JFrame_Mastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//    } catch (InstantiationException ex) {
//      java.util.logging.Logger.getLogger(JFrame_Mastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//    } catch (IllegalAccessException ex) {
//      java.util.logging.Logger.getLogger(JFrame_Mastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//      java.util.logging.Logger.getLogger(JFrame_Mastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//    }
//        //</editor-fold>
//        //</editor-fold>
//
//    /* Create and display the form */
//    java.awt.EventQueue.invokeLater(new Runnable() {
//      public void run() {
//        new JFrame_Mastermind().setVisible(true);
//      }
//    });
//  }
  public class ButtonListenerPin implements ActionListener{
    @Override
    public void actionPerformed(ActionEvent e) {
      boolean done=false;
      for(int i=0;i<8;i++){
        if(e.getSource()==pin_buttons[i]){
          for(int j=0;j<4 && done==false;j++){
            if(check_buttons[j].getBackground()==Color.white){
              check_buttons[j].setBackground(pinColor[i]);
              check_buttons[j].setEnabled(true);
              done=true;
            }
          }
          if(checkColor()){
            ConfirmButton.setEnabled(true); 
          }
        }
      }
    }
  }
  public class ButtonListenerCheck implements ActionListener{
    @Override
    public void actionPerformed(ActionEvent e) {
      for(int i=0;i<4;i++){
        if(e.getSource()==check_buttons[i]){
          check_buttons[i].setBackground(Color.white);
          check_buttons[i].setEnabled(false);
        }
      }
      ConfirmButton.setEnabled(false);
    }
  }
  public class ButtonListenerLevel implements ActionListener{
    @Override
    public void actionPerformed(ActionEvent e) {
//      for(int i=0;i<2;i++){
//        if(e.getSource()==level_buttons[i]){
//          Menu_pane.setVisible(false);
//          Game_pane.setVisible(true);
//          level=i;
//          System.out.println("level="+i);
//          bg.AnswerGen(level, name);
//        }
//      }
    }
  }
  RegExCheck validate = new RegExCheck();
  PlayerInfoQueries playerQueries = new PlayerInfoQueries();
  private List<PlayerInfo> results;
  private int numberOfEntries = 0;
  Color correct = new Color(102,255,102);
  Color wrong = new Color(255,102,102);
  //JFrame_Mastermind game;
  String name;
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton Back_Rule_button;
  private javax.swing.JPanel CheckPanel;
  private javax.swing.JButton ConfirmButton;
  private javax.swing.JLayeredPane Game_pane;
  private javax.swing.JPanel InputPanel;
  private javax.swing.JLabel Input_Label;
  private javax.swing.JPanel Level_pane;
  private javax.swing.JLayeredPane Login;
  private javax.swing.JLayeredPane Menu_pane;
  private javax.swing.JPanel RecordPanel;
  private javax.swing.JPanel ResultPanel;
  private javax.swing.JLabel Result_Label;
  private javax.swing.JButton Rule_button;
  private javax.swing.JLayeredPane Rules_pane;
  private javax.swing.JButton Start_button;
  private javax.swing.JLabel Title_label;
  private javax.swing.JLabel answer_label;
  private javax.swing.JButton checkButton;
  private javax.swing.JLabel checkMarkIconLabel;
  private javax.swing.JLabel checkMessageLabel;
  private javax.swing.JLabel counter_label;
  private javax.swing.JLabel counter_result_label;
  private javax.swing.JButton doneButton2;
  private javax.swing.JLabel emailErrorLabel;
  private javax.swing.JTextField emailField;
  private javax.swing.JTextField firstNameField;
  private javax.swing.JInternalFrame invalidUsername;
  private javax.swing.JCheckBox jCheckBox1;
  private javax.swing.JCheckBox jCheckBox2;
  private javax.swing.JPanel jSignUpLogin;
  private javax.swing.JTextField lastNameField;
  private javax.swing.JPanel left_panel;
  private javax.swing.JLabel loginLabel;
  private javax.swing.JLabel passwordErrorLabel;
  private javax.swing.JTextField passwordField;
  private javax.swing.JTextField passwordField2;
  private javax.swing.JButton registerButton;
  private javax.swing.JPanel right_panel;
  private javax.swing.JButton signInButton;
  private javax.swing.JLabel signUpLabel;
  private javax.swing.JLabel usernameErrorLabel;
  private javax.swing.JTextField usernameField;
  private javax.swing.JTextField usernameField2;
  private javax.swing.JLabel usernameNotFoundErrorLabel;
  private javax.swing.JLabel win_lose_label;
  private javax.swing.JPanel win_lose_panel;
  // End of variables declaration//GEN-END:variables
   
//If true: username is unique, if false: username is already taken
  private boolean checkUsername(String username){
    results = 
     playerQueries.getPlayerByUsername(username);
    numberOfEntries = results.size();

    if (numberOfEntries <1){
      System.out.println("true");
        return true;
    } else{
      System.out.println("false");
        return false;
    }
        
  }
  //save load methods
  public void AnswerLoad(){
    System.out.println("ans load start");
    try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(name.toString()+"Answer.txt"), "UTF-8"))) {
      String temp;
      temp=reader.readLine();
      System.out.println(temp);
      System.out.println(temp.length());
      for(int i=0;i<4;i++){
        bg.answer[i]=(int)(temp.charAt(i))-48;
      }
      reader.close();
    } catch (IOException ex){
      ex.printStackTrace();
    }
    System.out.println("ans load end");
  }
  
  private void RecordSave(){
    try(BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(name.toString()+"Record.txt"), "UTF-8"))){
      System.out.println("record save function start");
      for(int i=0;i<10;i++){
        for(int j=0;j<4;j++){
          if(bg.record[i][j]!=9)
            writer.write(new Integer(bg.record[i][j]).toString());
          else
            writer.write(" ");
        }
        writer.write("\n");
      }
      writer.close();
    }catch (IOException ex){
      //handle me
      ex.printStackTrace();
    }
    System.out.println("record save function ends");
  }
  
  public void RecordLoad(){
    System.out.println("recod load start");
    try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(name.toString()+"Record.txt"), "UTF-8"))) {
      String temp;
      int count=0;
      if((temp=reader.readLine())!=null){
        for(int j=0;j<4;j++){
          if(temp.charAt(j)!=' '){
            bg.record[count][j]=(int)(temp.charAt(j))-48;
            record_buttons[count][j].setBackground(pinColor[(int)(temp.charAt(j))-48]);
          }
          else
            bg.record[count][j]=9;    //9=empty
          }
        count++;
      }
    } catch (IOException ex){
      ex.printStackTrace();
      bg.AnswerGen(1, name);
    }
    System.out.println("record load end");
  }
  private void ResultSave(){
    System.out.println("result save start");
    try(BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(name.toString()+"Result.txt"), "UTF-8"))){
      for(int i=0;i<10;i++){
        for(int j=0;j<4;j++){
          writer.write(String.valueOf(bg.result[i][j]));
        }
        writer.write("\n");
      }
      writer.close();
    }catch (IOException ex){
      //handle me
      ex.printStackTrace();
    }
    System.out.println("result save end");
  }
  
  public void ResultLoad(){
    System.out.println("result load start");
    try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(name.toString()+"Result.txt"), "utf-8"))) {
      String temp;
      int count=0;
      if((temp=reader.readLine())!=null){
        for(int j=0;j<4;j++){
          bg.result[count][j]=temp.charAt(j);
          result_buttons[count][j].setText(String.valueOf(temp.charAt(j)));
        }
        count++;
      }
    } catch (IOException ex){
      ex.printStackTrace();
    }
    System.out.println("result load end");
  }
  
  public void reset(){
    File[] file = new File[3];
    String[] FileName = {name.toString()+"Answer.txt", name.toString()+"Result.txt", name.toString()+"Record.txt"};
    for(int i=0;i<3;i++){
      file[i] = new File(FileName[i]);
      file[i].delete();
    }
  }
}
//update gui
